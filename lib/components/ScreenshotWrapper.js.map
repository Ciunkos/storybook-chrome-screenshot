{"version":3,"sources":["../../src/components/ScreenshotWrapper.js"],"names":["ScreenshotWrapper","args","handleRef","component","emit","COMPONENT_INIT","delay","props","node","setTimeout","COMPONENT_READY","type","channel","context","viewport","children"],"mappings":";;;;;;;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;;;;;+eALA;AACA;;;IAMqBA,iB;;;AACnB,+BAAqB;AAAA;;AAAA;;AAAA,sCAANC,IAAM;AAANA,UAAM;AAAA;;AAAA,iKACVA,IADU;;AAAA,UAuBrBC,SAvBqB,GAuBT,UAACC,SAAD,EAAe;AACzB,YAAKA,SAAL,GAAiBA,SAAjB;AACD,KAzBoB;;AAEnB,UAAKC,IAAL,CAAU,sBAAWC,cAArB;AAFmB;AAGpB;;;;wCAEmB;AAAA;;AAAA,UACVC,KADU,GACA,KAAKC,KADL,CACVD,KADU;;AAElB,UAAME,OAAO,2BAAY,KAAKL,SAAjB,CAAb;;AAEA,kCAAaK,IAAb,EAAmB,YAAM;AACvBC,mBAAW,YAAM;AACf,iBAAKL,IAAL,CAAU,sBAAWM,eAArB;AACD,SAFD,EAEGJ,KAFH;AAGD,OAJD;AAKD;;;yBAEIK,I,EAAM;AACT,WAAKJ,KAAL,CAAWK,OAAX,CAAmBR,IAAnB,CAAwBO,IAAxB,eACK,KAAKJ,KAAL,CAAWM,OADhB;AAEEC,kBAAU,KAAKP,KAAL,CAAWO;AAFvB;AAID;;;6BAMQ;AAAA,UACCC,QADD,GACc,KAAKR,KADnB,CACCQ,QADD;;;AAGP,aACE;AAAA;AAAA,UAAM,KAAK,KAAKb,SAAhB;AACGa;AADH,OADF;AAKD;;;;;;kBApCkBf,iB","file":"ScreenshotWrapper.js","sourcesContent":["/* eslint-disable react/prop-types */\r\n/* eslint-disable react/no-find-dom-node */\r\nimport React, { Component } from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport imagesLoaded from 'imagesloaded';\r\nimport { EventTypes } from '../constants';\r\n\r\nexport default class ScreenshotWrapper extends Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n    this.emit(EventTypes.COMPONENT_INIT);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { delay } = this.props;\r\n    const node = findDOMNode(this.component);\r\n\r\n    imagesLoaded(node, () => {\r\n      setTimeout(() => {\r\n        this.emit(EventTypes.COMPONENT_READY);\r\n      }, delay);\r\n    });\r\n  }\r\n\r\n  emit(type) {\r\n    this.props.channel.emit(type, {\r\n      ...this.props.context,\r\n      viewport: this.props.viewport,\r\n    });\r\n  }\r\n\r\n  handleRef = (component) => {\r\n    this.component = component;\r\n  };\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <span ref={this.handleRef}>\r\n        {children}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n"]}